<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Programming in LabVIEW MathScript-While Loops</title>
  <metadata><md:content-id>undefined</md:content-id><md:title/><md:uuid>c4935ea9-d3dc-4809-92ce-d7ed4e410665</md:uuid>
</metadata>
  <content>
<section id="SecW">
	  <title>The While Loop</title>
<para id="ParaW">The <emphasis>while loop</emphasis> is similar to the for loop in that it allows the repeated execution of LABVIEW MATHSCRIPT statements. Unlike the for loop, the number of times that the LABVIEW MATHSCRIPT statements in the body of the loop are executed can depend on variable values that are computed in the loop.  The syntax of the while loop has the following form:
<code display="block" id="idp9991472">
while expression
    % LABVIEW MATHSCRIPT command 1
    % LABVIEW MATHSCRIPT command 2
    % More commands to execute repeatedly until expression is not true
end
</code>
where <code>expression</code> is a logical expression that is either true or false. (Information about logical expressions is available in <link document="m13721">Programming in LABVIEW MATHSCRIPT-Logical Expressions</link>.)
For example, consider the following while loop:
<code display="block" id="idp7522608">
n = 1
while n &lt; 3
    n = n+1
end
</code>
This code creates the following output:
<code display="block" id="idp7138192">
n =

     1

n =

     2

n =

     3
</code>
</para>
<para id="element-194">
Note that in all of this example, the LABVIEW MATHSCRIPT commands inside the while loop are indented relative to the <code>while</code> and <code>end</code> statements. This is not required by LABVIEW MATHSCRIPT but is common practice and makes the code much more readable.
</para>
</section>
  </content>
  
</document>