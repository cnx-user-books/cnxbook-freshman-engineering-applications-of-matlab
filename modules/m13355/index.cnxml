<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Vectors and Arrays in M-File Environments</title>
  <metadata><md:content-id>undefined</md:content-id><md:title/><md:uuid>d3006a86-4fef-4d20-81f6-f0070818d722</md:uuid>
</metadata>
<content>
    <section id="id1">
        <title>Vectors and Arrays in M-File Environments</title>
        <para id="Blahblah">
            One significant capability of environments accounts for much of their popularity among engineers: their ability to do vector and matrix computations.  M-file environments can operate on the following types of values:
            <list id="id13" list-type="labeled-item">
                <item><label>Scalar</label> a scalar is a single value (i.e. a number).</item>
                <item><label>Vector</label> a vector is an ordered series of numbers.</item>
                <item><label>Matrix</label> a matrix is a rectangular array of numbers.  <note id="idp4394640">The ability to do computations on vectors and matrices gives MATLAB its name (MATrix LABoratory).</note>  </item>
                <item><label>String</label> variables may also contain strings of characters.</item>
            </list>
        </para>
    </section>
    <section id="Vec1">
        <title>Vector Basics</title>
        <para id="bob1">
            There are several ways to create a vector of values. One is to enclose the values in square brackets. For example, the command <code>[9 7 5 3 1]</code>  creates the vector of values 9, 7, 5, 3, and 1.  This vector can be assigned to a variable <code>v</code>:
<code display="block" id="idm87360">
&gt;&gt; v = [9 7 5 3 1]

v =

  9  7  5  3  1
</code>
        </para>
        <para id="bob2">
            A second way to create a vector of values is with the sequence notation <code>start:end</code> or <code>start:inc:end</code>. For example, <code>1:10</code> creates the vector of integers from 1 to 10:
<code display="block" id="idm6315728">
&gt;&gt; 1:10

ans =

   1   2   3   4   5   6   7   8   9  10
</code>
            The command <code>1:0.1:2</code> creates the vector
<code display="block" id="idm5967696">
&gt;&gt; 1:0.1:2

ans =

  1.0000  1.1000  1.2000  1.3000  1.4000  1.5000  1.6000  1.7000  1.8000  1.9000  2.0000
</code>
            The command <code>10:-1:1</code> creates the vector
<code display="block" id="idm31024">
&gt;&gt; 10:-1:1

ans =

  10   9   8   7   6   5   4   3   2   1
</code>
        </para>
        <para id="bob3">
            Vector elements are accessed using numbers in parentheses. For example if the vector <code>v</code> is defined as <code>v = [9 7 5 3 1]</code>, the second element of <code>v</code> can be accessed as
<code display="block" id="idm6018016">
&gt;&gt; v(2)
    ans = 7
</code>
            The fourth element of <code>v</code> can be changed as follows:
<code display="block" id="idm6931232">
&gt;&gt; v(4) = 100

v =

    9    7    5  100    1
</code>
        </para>
    </section>
    <section id="vecc">
        <title>Element by Element Operations on Vectors</title>
        <para id="bob9">
            In addition to vector and matrix arithmetic, many operations can be performed on each element of the vector.  The following examples use the vector <code>v = [9 7 5 3 1]</code>.
            <list id="dd11" list-type="labeled-item">
                <item><label>Addition</label> the command <code>v+val</code> adds <code>val</code> to each element of <code>v</code>:
<code display="block" id="idp506976">
&gt;&gt; v+5
    ans =

      14  12  10   8   6

</code>
                </item>
                <item><label>Subtraction</label> the command <code>v-val</code> subtracts <code>val</code> from each element of <code>v</code>:
<code display="block" id="idm5497808">
&gt;&gt; v-5
    ans =

      4   2   0  -2  -4

</code>
                </item>
                <item><label>Multiplication</label> the command <code>v*val</code> multiplies each element of <code>v</code> by <code>val</code>:
<code display="block" id="idp7365440">
&gt;&gt; v*5
    ans =

      45  35  25  15   5

</code>
                </item>
                <item><label>Division</label> the command <code>v/val</code> divides each element of <code>v</code> by <code>val</code>:
<code display="block" id="idp2834688">
&gt;&gt; v/5
    ans =

      1.80000  1.40000  1.00000  0.60000  0.20000

</code>
                The command <code>val./v</code> divides <code>val</code> by each element of <code>v</code>:
<code display="block" id="idp1300912">
&gt;&gt; 5./v
    ans =

      0.55556  0.71429  1.00000  1.66667  5.00000

</code>
                </item>
                <item><label>Exponentiation</label> the command <code>v.^val</code> raises each element of <code>v</code> to the <code>val</code> power:
<code display="block" id="idp2113184">
&gt;&gt; v.^2
    ans =

      81  49  25   9   1

</code>
                </item>
            </list>
        </para>
    </section>
    <section id="sss3">
        <title>More Information on Vectors and Matrices</title>
        <para id="delete_me">
            An excellent tutorial on how to use MATLAB's vector  and array capabilities is at the <link url="http://www.mathworks.com/academia/student_center/tutorials/performing_calculations.html">Mathworks MATLAB tutorial page.</link>
        </para>
        <para id="element-679">
            One useful method of accessing entire rows or entire columns of the matrix is not mentioned in the tutorial. Suppose that the matrix <code>A</code> is defined as
<code display="block" id="idp7376000">
&gt;&gt; A = [1  2  3  4  5
        6  7  8  9  10
        11 12 13 14 15
        16 17 18 19 20]        

A = 

        1  2  3  4  5
        6  7  8  9  10
        11 12 13 14 15
        16 17 18 19 20
        
</code>
            An entire row of <code>A</code> can be obtained by specifying a single ":" as the column index:
<code display="block" id="idp3341456">
&gt;&gt; A(2,:)

    ans = 

        6  7  8  9  10

</code>
            Similarly, an entire  column of <code>A</code> can be obtained by specifying a single ":" as the  row index:
<code display="block" id="idm6094784">
&gt;&gt; A(:,3)

ans = 

     3
     8
    13
    18

</code>
        </para>   
    </section>
  </content>
  
</document>